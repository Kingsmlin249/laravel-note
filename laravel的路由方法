<html>
<div style="color:red">路由的几种请求方式:</div>
Route::get($uri, $callback);     get请求 获取资源
Route::post($uri, $callback);   post请求 创建资源
Route::put($uri, $callback);     编辑更改资源(需要提交完整的资源字段)
Route::patch($uri, $callback); 编辑更改资源(可以提交需要更改的字段)
Route::delete($uri, $callback);删除资源
Route::options($uri, $callback);服务器允许那些请求谓语
解析 get/post/put/delete可以解释为分别对应着增删改查
其中from表单中只能以post和get请求提交,所以laravel中以_method的方式伪造作为http的请求(表单方式伪造可以使用辅助{{ method_field(put)}}来生成隐藏的标签)
详情可以参照restful api

获取路由信息
Route::currentRoute();
Route::currentRouteName();
Route::currentRouteAction();

扩展请求方式
Route::any($url,$callback); 所有请求都可以通过
Route::match($RouteAll,$url,$callback);设置可以通过的多种请求

CSRF保护
需要在HTML中添加{{ csrf_field }}

路由的重定向
Route::redirect($url,$url,$callback); 即重定向

视图路由
Route::View($url,$data)

中间件
即middleware - 可以通过artisan来生成对应的中间件
Artisan make:middleware  middleName 后在app/http/middleware中生成文件
作用:即会先通过路由后直达中间件,比如可以判断用户id>10的重定向,否则继续执行

命名空间
Route::namespace('Name')->group(function(
	Route::get($url,$callback){}
	Route::get($url,$callback){}
))

子域名
Route::domain('{account}.myapp.com')->group(function () {
    Route::get('user/{id}', function ($account, $id) {
        //
    });
});

路由前缀
Route::prefix('admin')->group(function () {
    Route::get('users', function () {
        // 匹配包含 "/admin/users" 的 URL
    });
});

</html>
